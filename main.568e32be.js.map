{"version":3,"sources":["scripts/main.js"],"names":["board","startX","startY","endX","endY","score","rows","columns","startMessage","document","querySelector","winMessage","loseMessage","button","gameStarted","LEFT","RIGHT","UP","DOWN","setGame","r","c","tile","createElement","classList","add","id","toString","updateTile","append","num","innerText","value","resetGame","innerHTML","remove","getElementById","filterZeros","row","filter","slide","newRow","i","length","push","slideLeft","moved","originalRow","arraysEqual","setNum","slideRight","reverse","slideUp","slideDown","hasEmptyTile","found","Math","floor","random","isGameOver","fullBoard","move","isWinner","arr1","arr2","window","onload","addEventListener","e","code","touches","pageX","pageY","changedTouches","deltaX","deltaY","abs"],"mappings":"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","file":"main.568e32be.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst button = document.querySelector('.button');\nlet gameStarted = false;\nconst LEFT = 'ArrowLeft';\nconst RIGHT = 'ArrowRight';\nconst UP = 'ArrowUp';\nconst DOWN = 'ArrowDown';\n\nwindow.onload = function() {\n  setGame();\n};\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.createElement('div');\n\n      tile.classList.add('field-cell');\n      tile.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n      document.querySelector('.game-field').append(tile);\n    }\n  }\n\n  gameStarted = false;\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('field-cell');\n\n  if (num > 0) {\n    tile.innerText = num;\n    tile.classList.add(`field-cell--${num}`);\n  }\n}\n\ndocument.addEventListener('keyup', e => {\n  if (!gameStarted) {\n    return;\n  }\n\n  switch (e.code) {\n    case LEFT:\n      slideLeft();\n      break;\n\n    case RIGHT:\n      slideRight();\n      break;\n\n    case UP:\n      slideUp();\n      break;\n\n    case DOWN:\n      slideDown();\n      break;\n  }\n\n  document.querySelector('.game-score').innerHTML = score;\n\n  if (isGameOver()) {\n    loseMessage.classList.remove('hidden');\n  }\n\n  if (isWinner()) {\n    winMessage.classList.remove('hidden');\n  }\n});\n\n// for mobile-devices\nlet startX, startY, endX, endY;\n\ndocument.addEventListener('touchstart', e => {\n  if (!gameStarted) {\n    return;\n  }\n\n  startX = e.touches[0].pageX;\n  startY = e.touches[0].pageY;\n});\n\ndocument.addEventListener('touchend', e => {\n  if (!gameStarted) {\n    return;\n  }\n\n  endX = e.changedTouches[0].pageX;\n  endY = e.changedTouches[0].pageY;\n\n  const deltaX = endX - startX;\n  const deltaY = endY - startY;\n  const minSwipeDistance = 20;\n\n  if (Math.abs(deltaX) > Math.abs(deltaY)) {\n    if (Math.abs(deltaX) > minSwipeDistance) {\n      if (deltaX > 0) {\n        slideRight();\n      } else {\n        slideLeft();\n      }\n    }\n  } else {\n    if (Math.abs(deltaY) > minSwipeDistance) {\n      if (deltaY > 0) {\n        slideDown();\n      } else {\n        slideUp();\n      }\n    }\n  }\n\n  document.querySelector('.game-score').innerHTML = score;\n\n  if (isGameOver()) {\n    loseMessage.classList.remove('hidden');\n  }\n\n  if (isWinner()) {\n    winMessage.classList.remove('hidden');\n  }\n});\n\nbutton.addEventListener('click', () => {\n  if (gameStarted) {\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.innerHTML = 'Start';\n    gameStarted = false;\n    resetGame();\n  } else {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerHTML = 'Restart';\n    startMessage.classList.add('hidden');\n    gameStarted = true;\n    setNum();\n    setNum();\n  }\n});\n\nfunction resetGame() {\n  score = 0;\n  document.querySelector('.game-score').innerHTML = score;\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n  startMessage.classList.remove('hidden');\n\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let c = 0; c < columns; c++) {\n    for (let r = 0; r < rows; r++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      updateTile(tile, 0);\n    }\n  }\n}\n\nfunction filterZeros(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let newRow = filterZeros(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n    }\n  }\n\n  newRow = filterZeros(newRow);\n\n  while (newRow.length < columns) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeft() {\n  let moved = false;\n\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n    const originalRow = [...row];\n\n    row = slide(row);\n    board[r] = row;\n\n    if (!arraysEqual(originalRow, row)) {\n      moved = true;\n    }\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n\n  if (moved) {\n    setNum();\n  }\n};\n\nfunction slideRight() {\n  let moved = false;\n\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n    const originalRow = [...row];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[r] = row;\n\n    if (!arraysEqual(originalRow, row)) {\n      moved = true;\n    }\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n\n  if (moved) {\n    setNum();\n  }\n};\n\nfunction slideUp() {\n  let moved = false;\n\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n    const originalRow = [...row];\n\n    row = slide(row);\n\n    if (!arraysEqual(originalRow, row)) {\n      moved = true;\n    }\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n\n  if (moved) {\n    setNum();\n  }\n}\n\nfunction slideDown() {\n  let moved = false;\n\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n    const originalRow = [...row];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    if (!arraysEqual(originalRow, row)) {\n      moved = true;\n    }\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n\n  if (moved) {\n    setNum();\n  }\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setNum() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = Math.random() < 0.9 ? 2 : 4;\n\n      board[r][c] = num;\n      tile.innerText = num;\n      tile.classList.add(`field-cell--${num}`);\n      found = true;\n    }\n  }\n}\n\nfunction isGameOver() {\n  const fullBoard = !hasEmptyTile();\n  let move = true;\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (c > 0 && board[r][c] === board[r][c - 1]) {\n        move = false;\n      } else if (c < columns - 1 && board[r][c] === board[r][c + 1]) {\n        move = false;\n      } else if (r < rows - 1 && board[r][c] === board[r + 1][c]) {\n        move = false;\n      } else if (r > 0 && board[r][c] === board[r - 1][c]) {\n        move = false;\n      }\n    }\n  }\n\n  return move && fullBoard;\n}\n\nfunction isWinner() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction arraysEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"]}